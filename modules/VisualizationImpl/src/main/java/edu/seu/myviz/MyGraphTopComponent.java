/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.seu.myviz;

import java.awt.BorderLayout;
import javax.swing.SwingUtilities;
import org.gephi.visualization.VizController;
import org.gephi.visualization.apiimpl.GraphDrawable;
import edu.seu.myviz.component.MyVizToolbar;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
//@ConvertAsProperties(
//        dtd = "-//edu.seu.myviz//MyGraph//EN",
//        autostore = false
//)
//@TopComponent.Description(
//        preferredID = "MyGraphTopComponent",
//        //iconBase="SET/PATH/TO/ICON/HERE", 
//        persistenceType = TopComponent.PERSISTENCE_ALWAYS
//)
//@TopComponent.Registration(mode = "editor", openAtStartup = false, roles={"displayer"})
//@ActionID(category = "Window", id = "edu.seu.myviz.MyGraphTopComponent")
//@ActionReference(path = "Menu/Window" /*, position = 333 */)
//@TopComponent.OpenActionRegistration(
//        displayName = "#CTL_MyGraphAction",
//        preferredID = "MyGraphTopComponent"
//)
//@Messages({
//    "CTL_MyGraphAction=MyGraph",
//    "CTL_MyGraphTopComponent=MyGraph Window",
//    "HINT_MyGraphTopComponent=This is a MyGraph window"
//})
public final class MyGraphTopComponent extends TopComponent {

    private transient GraphDrawable drawable;
    
    public MyGraphTopComponent() {
        initComponents();
        setName("可视化图");
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        
        WindowManager.getDefault().invokeWhenUIReady(new Runnable(){
            @Override
            public void run() {
                open();
                
                SwingUtilities.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        toolsPanel.add(new MyVizToolbar());
                        drawable=VizController.getInstance().getDrawable();
                        requestActive();
                        add(drawable.getGraphComponent(), BorderLayout.CENTER);
                    }
                });
            }
        });
        this.requestActive();
        

    }
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolsPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        toolsPanel.setBackground(new java.awt.Color(255, 255, 255));
        add(toolsPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel toolsPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
